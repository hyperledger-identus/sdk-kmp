CREATE TABLE DID (
    did TEXT NOT NULL UNIQUE,
    method TEXT,
    methodId TEXT,
    schema TEXT,
    alias TEXT,
    PRIMARY KEY (did)
);

CREATE TABLE PrivateKey (
    id TEXT NOT NULL UNIQUE, -- VARCHAR(36)
    curve TEXT,
    privateKey TEXT,
    keyPathIndex INTEGER,
    didId TEXT NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (didId) REFERENCES DID(did)
);

CREATE TABLE DIDPair (
    id TEXT NOT NULL UNIQUE, -- ID will be hostDID and receiverDID concatenated
    name TEXT,
    hostDID TEXT NOT NULL,
    receiverDID TEXT NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (hostDID) REFERENCES DID(did),
    FOREIGN KEY (receiverDID) REFERENCES DID(did)
);

CREATE TABLE Mediator (
    id TEXT NOT NULL UNIQUE, -- VARCHAR(36)
    mediatorDIDId TEXT,
    hostDIDId TEXT,
    routingDIDId TEXT,
    PRIMARY KEY (id),
    FOREIGN KEY (mediatorDIDId) REFERENCES DID(did),
    FOREIGN KEY (hostDIDId) REFERENCES DID(did),
    FOREIGN KEY (routingDIDId) REFERENCES DID(did)
);

CREATE TABLE Message (
    id TEXT NOT NULL UNIQUE,
    createdTime TEXT,
    dataJson TEXT,
    `from` TEXT,
    thid TEXT,
    `to` TEXT,
    type TEXT,
    isReceived INTEGER DEFAULT 0, -- TINYINT
    PRIMARY KEY (id)
);

CREATE TABLE VerifiableCredential (
    id TEXT NOT NULL UNIQUE, -- ID will be a hash of the values of a credential in a specific order
    credentialType TEXT,
    expirationDate TEXT,
    issuanceDate TEXT,
    verifiableCredentialJson TEXT,
    issuerDIDId TEXT,
    PRIMARY KEY (id)
);
